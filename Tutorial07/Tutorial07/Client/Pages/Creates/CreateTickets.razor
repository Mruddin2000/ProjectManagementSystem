@page "/Creates/CreateTickets"

@attribute [Authorize]
@inject NavigationManager Navigation
@inject HttpClient Http
<style>
    .box1 {
        padding-left: 50%;
        border: ridge;
        margin-left: -25%;
    }
    .box3 {
        margin-left: -25%;
        margin-top: 1%;
    }

    .box2 {
        padding: 10%;
        padding-left: 50%;
        border: ridge;
        margin-left: -25%;
    }

</style>

<div class="box1">
    <h1>Get Started</h1>
    <br />
    <h3>Create a Ticket</h3>
</div>

<div class="box3">

    <p>
        <a class="btn btn-primary" href="/ExistingProject">Dashboard</a>

    </p>


</div>

<div class="box2">

    <EditForm Model="ticket" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="control-label">Name</label>
            <InputText @bind-Value="ticket.TicketName"></InputText>
            <ValidationMessage For="@(() => ticket.TicketName)" />
        </div>
        <div class="form-group">
            <label class="control-label">Description</label>
            <InputText @bind-Value="ticket.Description"></InputText>
            <ValidationMessage For="@(() => ticket.Description)" />
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>

    </EditForm>

   
    </div>
    @code {         

        private Ticket ticket { get; set; } = new Ticket();



        private async void HandleValidSubmit()
        {
            try
            {
                var respone = await Http.PostAsJsonAsync("api/Ticket", ticket);
                respone.EnsureSuccessStatusCode();

                var content = await respone.Content.ReadAsStringAsync();
                var tickets = JsonConvert.DeserializeObject<Ticket>
                    (content);

                Navigation.NavigateTo($"Creates/CreateProject");
            }
            catch (Exception)
                {

                throw;
                }
            }

        }


