@page "/Creates/CreateProject"

@attribute [Authorize]
@inject NavigationManager Navigation
@inject HttpClient http
    <style>
        .box1 {
            padding-left: 50%;
            border: ridge;
            margin-left: -25%;
        }
        .box3 {
            margin-left: -25%;
            margin-top: 1%;
        }

        .box2 {
            padding: 10%;
            padding-left: 50%;
            border: ridge;
            margin-left: -25%;
        }
    </style>
    <div class="box1">
        <h3>Create Project</h3>
    </div>
    <div class="box3">

        <p>
            <a class="btn btn-primary" href="/ExistingProject">Dashboard</a>

        </p>


    </div>
    <div class="box2">

        <EditForm Model="project" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label class="control-label">Name</label>
                <InputText @bind-Value="project.ProjectName"></InputText>
                <ValidationMessage For="@(()=>project.ProjectName)" />
            </div>
            <div class="form-group">
                <label class="control-label">Description</label>
                <InputText @bind-Value="project.Description"></InputText>
                <ValidationMessage For="@(()=>project.Description)" />


            </div>
            <button type="submit" class="btn btn-primary">Submit</button>

        </EditForm>
    </div>


    @code {
        private Project project { get; set; } = new Project();
        private async void HandleValidSubmit()
        {
            try
            {
                var response = await http.PostAsJsonAsync("/api/Project", project);
                response.EnsureSuccessStatusCode();

                var content = await response.Content.ReadAsStringAsync();
                var projects = JsonConvert.DeserializeObject<Project>(content);
                Navigation.NavigateTo($"Creates/CreateCompany");
            }
            catch (Exception)
            {

                throw;
            }


        }

    }

